{
  "comments": [
    {
      "key": {
        "uuid": "bad4c8de_46351244",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2019-02-01T01:36:29Z",
      "side": 1,
      "message": "Won\u0027t this run into the same cross-site value sharing problem that you ran into before?",
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ce55d51_0a162afb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1032487
      },
      "writtenOn": "2019-02-01T02:18:42Z",
      "side": 1,
      "message": "Possible, but with lower possibility due to short life of cached objects and the way makeKey works. I haven\u0027t seen a case yet.\nShould makeKey include some site ID? Is there a virtual site ID?\nCan a plugin store a singleton object per virtual site?",
      "parentUuid": "bad4c8de_46351244",
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0d3354a_b49d2937",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2019-02-01T02:23:13Z",
      "side": 1,
      "message": "Can you use e.g. a LoadingCache\u003cPluginConfigFactory, Cache\u003e? That way, there\u0027s no sharing, and you can set whatever expiration policy you want.",
      "parentUuid": "6ce55d51_0a162afb",
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42fa0799_a1bf5f3c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2019-02-01T03:13:21Z",
      "side": 1,
      "message": "Ah, I see now that that\u0027s similar to what you are already doing: the actual effectively static field is dbCache.\n\nCan you make that static instead of having the singleton Cache object?",
      "parentUuid": "e0d3354a_b49d2937",
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa2f34f0_30aed769",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1032487
      },
      "writtenOn": "2019-02-01T06:28:02Z",
      "side": 1,
      "message": "I think that will work and we can have unique key for each site+change+patchset. However, there is another problem of\nallowing each virtual site to have its own\n  config.getMaxCacheAge(), config.getMaxCacheSize()\nwhile sharing one static dbCache.\nI didn\u0027t know that a Gerrit server process could have multiple sites.",
      "parentUuid": "42fa0799_a1bf5f3c",
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45a841c4_7009fa1e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2019-02-01T03:13:21Z",
      "side": 1,
      "message": "What do keys in dbCache look like? Can the comment above say?\n\nCan you use the PluginConfigFactory as key instead of making a custom key? That would avoid the possibility of collisions.",
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "108639c4_c0e53a00",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1032487
      },
      "writtenOn": "2019-02-01T06:28:02Z",
      "side": 1,
      "message": "At new line 123:\n   String dbKey \u003d Cache.makeKey(changeData.getId().get(), patchset, branch);\nAt new line 176:\n   makeKey returns (change + \":\" + patch + \":\" + branch)\nNow I think that branch is redundant and change as old 32-bit int might not be enough.\n\nHow about the following key\n   String dbKey \u003d String.format(\"%H:%s:%d\",\n     configFactory, changeData.getKey().get(), patch);",
      "parentUuid": "45a841c4_7009fa1e",
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a2cec48_85e2adf6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2019-02-01T01:36:29Z",
      "side": 1,
      "message": "optional, not about this change: can this use a Duration?",
      "range": {
        "startLine": 62,
        "startChar": 16,
        "endLine": 62,
        "endChar": 30
      },
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d54f466c_b3636181",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1032487
      },
      "writtenOn": "2019-02-01T02:18:42Z",
      "side": 1,
      "message": "Doesn\u0027t expireAfterWrite(maxSeconds, SECONDS) means duration?\nOr were you suggesting renaming the parameter?",
      "parentUuid": "2a2cec48_85e2adf6",
      "range": {
        "startLine": 62,
        "startChar": 16,
        "endLine": 62,
        "endChar": 30
      },
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bfa8ecb_196cd29d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2019-02-01T02:23:13Z",
      "side": 1,
      "message": "I mean using a java.time.Duration object instead of an int. But it\u0027s orthogonal to this change.",
      "parentUuid": "d54f466c_b3636181",
      "range": {
        "startLine": 62,
        "startChar": 16,
        "endLine": 62,
        "endChar": 30
      },
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70d6c0d3_ad2fe5b3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Cache.java",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2019-02-01T01:36:29Z",
      "side": 1,
      "message": "optional: long line, google-java-format should help",
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b85fad88_c8c57059",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/findowners/Config.java",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1011842
      },
      "writtenOn": "2019-02-01T01:36:29Z",
      "side": 1,
      "message": "optional: no need to set values like \"\u003d false\" or \"\u003d 0\" here, since that\u0027s the default.",
      "revId": "2a58209e022e03b82e6c8ff3383d233570dd5379",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}